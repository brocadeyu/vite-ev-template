/**
 * @license
 * Cesium - https://github.com/CesiumGS/cesium
 * Version 1.96
 *
 * Copyright 2011-2022 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/CesiumGS/cesium/blob/main/LICENSE.md for full licensing details.
 */
define(["exports","./Check-d82b20f7","./defaultValue-4607806f","./DeveloperError-46384437","./Math-6bc63320"],(function(n,e,t,r,a){"use strict";function u(n,e,r){this.x=t.defaultValue(n,0),this.y=t.defaultValue(e,0),this.z=t.defaultValue(r,0)}u.fromSpherical=function(n,e){t.defined(e)||(e=new u);const r=n.clock,a=n.cone,i=t.defaultValue(n.magnitude,1),o=i*Math.sin(a);return e.x=o*Math.cos(r),e.y=o*Math.sin(r),e.z=i*Math.cos(a),e},u.fromElements=function(n,e,r,a){return t.defined(a)?(a.x=n,a.y=e,a.z=r,a):new u(n,e,r)},u.clone=function(n,e){if(t.defined(n))return t.defined(e)?(e.x=n.x,e.y=n.y,e.z=n.z,e):new u(n.x,n.y,n.z)},u.fromCartesian4=u.clone,u.packedLength=3,u.pack=function(n,e,r){return r=t.defaultValue(r,0),e[r++]=n.x,e[r++]=n.y,e[r]=n.z,e},u.unpack=function(n,e,r){return e=t.defaultValue(e,0),t.defined(r)||(r=new u),r.x=n[e++],r.y=n[e++],r.z=n[e],r},u.packArray=function(n,e){const r=n.length,a=3*r;t.defined(e)?(Array.isArray(e)||e.length===a)&&e.length!==a&&(e.length=a):e=new Array(a);for(let t=0;t<r;++t)u.pack(n[t],e,3*t);return e},u.unpackArray=function(n,e){const r=n.length;t.defined(e)?e.length=r/3:e=new Array(r/3);for(let t=0;t<r;t+=3){const r=t/3;e[r]=u.unpack(n,t,e[r])}return e},u.fromArray=u.unpack,u.maximumComponent=function(n){return Math.max(n.x,n.y,n.z)},u.minimumComponent=function(n){return Math.min(n.x,n.y,n.z)},u.minimumByComponent=function(n,e,t){return t.x=Math.min(n.x,e.x),t.y=Math.min(n.y,e.y),t.z=Math.min(n.z,e.z),t},u.maximumByComponent=function(n,e,t){return t.x=Math.max(n.x,e.x),t.y=Math.max(n.y,e.y),t.z=Math.max(n.z,e.z),t},u.clamp=function(n,e,t,r){const u=a.CesiumMath.clamp(n.x,e.x,t.x),i=a.CesiumMath.clamp(n.y,e.y,t.y),o=a.CesiumMath.clamp(n.z,e.z,t.z);return r.x=u,r.y=i,r.z=o,r},u.magnitudeSquared=function(n){return n.x*n.x+n.y*n.y+n.z*n.z},u.magnitude=function(n){return Math.sqrt(u.magnitudeSquared(n))};const i=new u;u.distance=function(n,e){return u.subtract(n,e,i),u.magnitude(i)},u.distanceSquared=function(n,e){return u.subtract(n,e,i),u.magnitudeSquared(i)},u.normalize=function(n,e){const t=u.magnitude(n);return e.x=n.x/t,e.y=n.y/t,e.z=n.z/t,e},u.dot=function(n,e){return n.x*e.x+n.y*e.y+n.z*e.z},u.multiplyComponents=function(n,e,t){return t.x=n.x*e.x,t.y=n.y*e.y,t.z=n.z*e.z,t},u.divideComponents=function(n,e,t){return t.x=n.x/e.x,t.y=n.y/e.y,t.z=n.z/e.z,t},u.add=function(n,e,t){return t.x=n.x+e.x,t.y=n.y+e.y,t.z=n.z+e.z,t},u.subtract=function(n,e,r){return t.defined(r)||(r=new u),r.x=n.x-e.x,r.y=n.y-e.y,r.z=n.z-e.z,r},u.multiplyByScalar=function(n,e,t){return t.x=n.x*e,t.y=n.y*e,t.z=n.z*e,t},u.divideByScalar=function(n,e,t){return t.x=n.x/e,t.y=n.y/e,t.z=n.z/e,t},u.negate=function(n,e){return e.x=-n.x,e.y=-n.y,e.z=-n.z,e},u.abs=function(n,e){return e.x=Math.abs(n.x),e.y=Math.abs(n.y),e.z=Math.abs(n.z),e};const o=new u;u.lerp=function(n,e,t,r){return u.multiplyByScalar(e,t,o),r=u.multiplyByScalar(n,1-t,r),u.add(o,r,r)};const c=new u,s=new u;u.angleBetween=function(n,e){u.normalize(n,c),u.normalize(e,s);const t=u.dot(c,s),r=u.magnitude(u.cross(c,s,c));return Math.atan2(r,t)};const f=new u;u.mostOrthogonalAxis=function(n,e){const t=u.normalize(n,f);return u.abs(t,t),e=t.x<=t.y?t.x<=t.z?u.clone(u.UNIT_X,e):u.clone(u.UNIT_Z,e):t.y<=t.z?u.clone(u.UNIT_Y,e):u.clone(u.UNIT_Z,e)},u.projectVector=function(n,e,t){const r=u.dot(n,e)/u.dot(e,e);return u.multiplyByScalar(e,r,t)},u.equals=function(n,e){return n===e||t.defined(n)&&t.defined(e)&&n.x===e.x&&n.y===e.y&&n.z===e.z},u.equalsArray=function(n,e,t){return n.x===e[t]&&n.y===e[t+1]&&n.z===e[t+2]},u.equalsEpsilon=function(n,e,r,u){return n===e||t.defined(n)&&t.defined(e)&&a.CesiumMath.equalsEpsilon(n.x,e.x,r,u)&&a.CesiumMath.equalsEpsilon(n.y,e.y,r,u)&&a.CesiumMath.equalsEpsilon(n.z,e.z,r,u)},u.cross=function(n,e,t){const r=n.x,a=n.y,u=n.z,i=e.x,o=e.y,c=e.z,s=a*c-u*o,f=u*i-r*c,l=r*o-a*i;return t.x=s,t.y=f,t.z=l,t},u.midpoint=function(n,e,t){return t.x=.5*(n.x+e.x),t.y=.5*(n.y+e.y),t.z=.5*(n.z+e.z),t},u.fromDegrees=function(n,e,t,r,i){return n=a.CesiumMath.toRadians(n),e=a.CesiumMath.toRadians(e),u.fromRadians(n,e,t,r,i)};let l=new u,y=new u;u.wgs84RadiiSquared=new u(40680631590769,40680631590769,40408299984661.445),u.fromRadians=function(n,e,r,a,i){r=t.defaultValue(r,0);const o=t.defined(a)?a.radiiSquared:this.wgs84RadiiSquared,c=Math.cos(e);l.x=c*Math.cos(n),l.y=c*Math.sin(n),l.z=Math.sin(e),l=u.normalize(l,l),u.multiplyComponents(o,l,y);const s=Math.sqrt(u.dot(l,y));return y=u.divideByScalar(y,s,y),l=u.multiplyByScalar(l,r,l),t.defined(i)||(i=new u),u.add(y,l,i)},u.fromDegreesArray=function(n,e,r){const a=n.length;t.defined(r)?r.length=a/2:r=new Array(a/2);for(let t=0;t<a;t+=2){const a=n[t],i=n[t+1],o=t/2;r[o]=u.fromDegrees(a,i,0,e,r[o])}return r},u.fromRadiansArray=function(n,e,r){const a=n.length;t.defined(r)?r.length=a/2:r=new Array(a/2);for(let t=0;t<a;t+=2){const a=n[t],i=n[t+1],o=t/2;r[o]=u.fromRadians(a,i,0,e,r[o])}return r},u.fromDegreesArrayHeights=function(n,e,r){const a=n.length;t.defined(r)?r.length=a/3:r=new Array(a/3);for(let t=0;t<a;t+=3){const a=n[t],i=n[t+1],o=n[t+2],c=t/3;r[c]=u.fromDegrees(a,i,o,e,r[c])}return r},u.fromRadiansArrayHeights=function(n,e,r){const a=n.length;t.defined(r)?r.length=a/3:r=new Array(a/3);for(let t=0;t<a;t+=3){const a=n[t],i=n[t+1],o=n[t+2],c=t/3;r[c]=u.fromRadians(a,i,o,e,r[c])}return r},u.ZERO=Object.freeze(new u(0,0,0)),u.ONE=Object.freeze(new u(1,1,1)),u.UNIT_X=Object.freeze(new u(1,0,0)),u.UNIT_Y=Object.freeze(new u(0,1,0)),u.UNIT_Z=Object.freeze(new u(0,0,1)),u.prototype.clone=function(n){return u.clone(this,n)},u.prototype.equals=function(n){return u.equals(this,n)},u.prototype.equalsEpsilon=function(n,e,t){return u.equalsEpsilon(this,n,e,t)},u.prototype.toString=function(){return`(${this.x}, ${this.y}, ${this.z})`},n.Cartesian3=u}));
